// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MultiTenantLMS.Data;

#nullable disable

namespace MultiTenantLMS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250816141033_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MultiTenantLMS.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Intro to C#",
                            TenantId = 1,
                            Title = "C# Basics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Learn ASP.NET Core",
                            TenantId = 1,
                            Title = "ASP.NET Core"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Intro to Java",
                            TenantId = 2,
                            Title = "Java Basics"
                        });
                });

            modelBuilder.Entity("MultiTenantLMS.Models.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnrolledAt")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Progress")
                        .HasColumnType("double");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            EnrolledAt = new DateTime(2025, 8, 16, 19, 40, 32, 930, DateTimeKind.Local).AddTicks(3454),
                            Progress = 0.0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 3,
                            EnrolledAt = new DateTime(2025, 8, 16, 19, 40, 32, 930, DateTimeKind.Local).AddTicks(3463),
                            Progress = 0.0,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("MultiTenantLMS.Models.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tenants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Domain = "tenantA.com",
                            Name = "Tenant A"
                        },
                        new
                        {
                            Id = 2,
                            Domain = "tenantB.com",
                            Name = "Tenant B"
                        });
                });

            modelBuilder.Entity("MultiTenantLMS.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "hashedpassA",
                            Role = "Admin",
                            TenantId = 1,
                            Username = "adminA"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = "hashedpassA",
                            Role = "Student",
                            TenantId = 1,
                            Username = "studentA"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = "hashedpassB",
                            Role = "Admin",
                            TenantId = 2,
                            Username = "adminB"
                        },
                        new
                        {
                            Id = 4,
                            PasswordHash = "hashedpassB",
                            Role = "Student",
                            TenantId = 2,
                            Username = "studentB"
                        });
                });

            modelBuilder.Entity("MultiTenantLMS.Models.Course", b =>
                {
                    b.HasOne("MultiTenantLMS.Models.Tenant", "Tenant")
                        .WithMany("Courses")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("MultiTenantLMS.Models.Enrollment", b =>
                {
                    b.HasOne("MultiTenantLMS.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MultiTenantLMS.Models.User", "User")
                        .WithMany("Enrollments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MultiTenantLMS.Models.User", b =>
                {
                    b.HasOne("MultiTenantLMS.Models.Tenant", "Tenant")
                        .WithMany("Users")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("MultiTenantLMS.Models.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("MultiTenantLMS.Models.Tenant", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("MultiTenantLMS.Models.User", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
